{"version":3,"sources":["img/IMG_20190509_114203.jpg","ScheduleList.jsx","LoginForm.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","ScheduleList","state","isLoading","scheduleList","_this2","this","fetch","concat","window","location","hostname","method","then","response","json","jsondata","length","setState","rowData","react_default","a","createElement","Table","Row","Cell","colSpan","className","map","value","index","array","key","id","collapsing","team_one","team_two","game_type","date","time","Button","content","icon","labelPosition","color","Fragment","style","marginBottom","Menu","pointing","secondary","Item","name","active","position","onClick","handleItemClick","singleLine","Header","HeaderCell","Body","Component","LoginForm","props","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","username","password","logged","invalidPass","handleChangeUsername","bind","assertThisInitialized","handleChangePassword","handleSubmit","_ref","formData","FormData","append","body","status","localStorage","setItem","JSON","stringify","removeItem","e","target","tryLogin","getItem","parse","src_ScheduleList","Grid","textAlign","height","verticalAlign","Column","maxWidth","Segment","Image","src","require","Message","error","header","Form","size","onSubmit","Input","fluid","iconPosition","onChange","placeholder","type","App","src_LoginForm","Boolean","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0d67dd5d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/IMG_20190509_114203.e3ca1ee0.jpg\";","import React, {Component} from 'react';\r\nimport {Table, Menu, Segment, Button} from 'semantic-ui-react'\r\n\r\nclass ScheduleList extends Component {\r\n\r\n\tstate = {\r\n\t\tisLoading: true,\r\n\t\tscheduleList: []\r\n\t};\r\n\r\n\tcomponentDidMount() {\r\n\t\tfetch(`//${window.location.hostname}/user/api/schedules.php`,\r\n\t\t\t{\r\n\t\t\t\t// body: formData,\r\n\t\t\t\tmethod: \"get\"\r\n\t\t\t}).then(response => response.json())\r\n\t\t\t.then((jsondata) => {\r\n\t\t\t\tif (jsondata.length){\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tisLoading: false,\r\n\t\t\t\t\t\tscheduleList: jsondata\r\n\t\t\t\t\t});\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tisLoading: false\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t}\r\n\r\n\trender() {\r\n\t\t/*if (this.state.isLoading){\r\n\t\t\treturn <b>Loading Please wait...</b>\r\n\t\t}\r\n\r\n\t\treturn <b>There is some found {this.state.scheduleList.length}</b>*/\r\n\r\n\t\tlet rowData = (\r\n\t\t\t<Table.Row>\r\n\t\t\t\t<Table.Cell colSpan={6} className={\"center aligned\"}>Loading Data, Please wait...</Table.Cell>\r\n\t\t\t</Table.Row>\r\n\t\t);\r\n\r\n\r\n\t\tif (!this.state.isLoading){\r\n\t\t\tif (this.state.scheduleList.length < 1){\r\n\t\t\t\trowData = (\r\n\t\t\t\t\t<Table.Row>\r\n\t\t\t\t\t\t<Table.Cell colSpan={6} className={\"center aligned\"}>Sorry no schedule found</Table.Cell>\r\n\t\t\t\t\t</Table.Row>\r\n\t\t\t\t)\r\n\t\t\t}else{\r\n\t\t\t\trowData = this.state.scheduleList.map(function (value, index, array) {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Table.Row key={value.id}>\r\n\t\t\t\t\t\t\t<Table.Cell collapsing>{value.id}</Table.Cell>\r\n\t\t\t\t\t\t\t<Table.Cell>{value.team_one}</Table.Cell>\r\n\t\t\t\t\t\t\t<Table.Cell>{value.team_two}</Table.Cell>\r\n\t\t\t\t\t\t\t<Table.Cell>{value.game_type}</Table.Cell>\r\n\t\t\t\t\t\t\t<Table.Cell>{value.date + \" \" + value.time}</Table.Cell>\r\n\t\t\t\t\t\t\t<Table.Cell collapsing>\r\n\t\t\t\t\t\t\t\t<Button content='Open' icon='right arrow' labelPosition='right' color={\"blue\"} />\r\n\t\t\t\t\t\t\t</Table.Cell>\r\n\t\t\t\t\t\t</Table.Row>\r\n\t\t\t\t\t)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<div style={{\"marginBottom\": \"20px\"}}>\r\n\t\t\t\t\t<Menu pointing secondary>\r\n\t\t\t\t\t\t<div className=\"ui container\">\r\n\t\t\t\t\t\t\t<Menu.Item name='schedules' active={true}/>\r\n\t\t\t\t\t\t\t<Menu.Menu position='right'>\r\n\t\t\t\t\t\t\t\t<Menu.Item\r\n\t\t\t\t\t\t\t\t\tname='logout'\r\n\t\t\t\t\t\t\t\t\tactive={false}\r\n\t\t\t\t\t\t\t\t\tonClick={this.handleItemClick}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Menu.Menu>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Menu>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"ui container\">\r\n\t\t\t\t\t<Table singleLine>\r\n\t\t\t\t\t\t<Table.Header>\r\n\t\t\t\t\t\t\t<Table.Row>\r\n\t\t\t\t\t\t\t\t<Table.HeaderCell>Id</Table.HeaderCell>\r\n\t\t\t\t\t\t\t\t<Table.HeaderCell>Home</Table.HeaderCell>\r\n\t\t\t\t\t\t\t\t<Table.HeaderCell>Aways</Table.HeaderCell>\r\n\t\t\t\t\t\t\t\t<Table.HeaderCell>Game Type</Table.HeaderCell>\r\n\t\t\t\t\t\t\t\t<Table.HeaderCell>Date</Table.HeaderCell>\r\n\t\t\t\t\t\t\t\t<Table.HeaderCell>Action</Table.HeaderCell>\r\n\t\t\t\t\t\t\t</Table.Row>\r\n\t\t\t\t\t\t</Table.Header>\r\n\t\t\t\t\t\t<Table.Body>{rowData}</Table.Body>\r\n\t\t\t\t\t</Table>\r\n\t\t\t\t</div>\r\n\t\t\t</>\r\n\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default ScheduleList;","import React, {Component} from 'react'\r\nimport { Button, Form, Grid, Header, Image, Message, Segment } from 'semantic-ui-react'\r\nimport ScheduleList from \"./ScheduleList\";\r\n\r\n\r\nclass LoginForm extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tusername: \"\",\r\n\t\t\tpassword: \"\",\r\n\t\t\tlogged: false,\r\n\t\t\tinvalidPass: false,\r\n\t\t};\r\n\r\n\t\tthis.handleChangeUsername = this.handleChangeUsername.bind(this);\r\n\t\tthis.handleChangePassword = this.handleChangePassword.bind(this);\r\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\r\n\t}\r\n\r\n\ttryLogin({username, password}){\r\n\t\tlet formData = new FormData();\r\n\t\tformData.append('usn', username);\r\n\t\tformData.append('password', password);\r\n\r\n\t\tfetch(`//${window.location.hostname}/user/api/login.php`,\r\n\t\t\t{\r\n\t\t\t\tbody: formData,\r\n\t\t\t\tmethod: \"post\"\r\n\t\t\t}).then(response => response.json())\r\n\t\t\t.then((jsondata) => {\r\n\t\t\t\tif (jsondata.status === \"found\"){\r\n\t\t\t\t\tlocalStorage.setItem(\"account\", JSON.stringify({username, password}));\r\n\r\n\t\t\t\t\tthis.setState({logged: true})\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.setState({invalidPass: true});\r\n\t\t\t\t\tlocalStorage.removeItem(\"account\");\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t}\r\n\r\n\thandleChangeUsername(e) {\r\n\t\tthis.setState({ username: e.target.value });\r\n\t}\r\n\r\n\thandleChangePassword(e) {\r\n\t\tthis.setState({ password: e.target.value });\r\n\t}\r\n\r\n\thandleSubmit(e){\r\n\t\tthis.tryLogin(this.state)\r\n\t}\r\n\r\n\trender() {\r\n\t\t// Every time it renders check for login credentials\r\n\t\tif (this.state.logged === false && localStorage.getItem(\"account\")){\r\n\t\t\tthis.tryLogin(JSON.parse(localStorage.getItem(\"account\")));\r\n\t\t}\r\n\r\n\t\tif (this.state.logged === true){\r\n\t\t\treturn <ScheduleList />\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<div className='login-form'>\r\n\t\t\t\t<style>{`\r\n      body > div,\r\n      body > div > div,\r\n      body > div > div > div.login-form {\r\n        height: 100%;\r\n      }\r\n    `}\r\n\t\t\t\t</style>\r\n\t\t\t\t<Grid textAlign='center' style={{height: '100%'}} verticalAlign='middle'>\r\n\t\t\t\t\t<Grid.Column style={{maxWidth: 350}}>\r\n\t\t\t\t\t\t<Segment>\r\n\t\t\t\t\t\t\t<Image src={require(\"./img/IMG_20190509_114203.jpg\")}/>\r\n\t\t\t\t\t\t\t{this.state.invalidPass ? <Message\r\n\t\t\t\t\t\t\t\terror\r\n\t\t\t\t\t\t\t\theader='You have entered an invalid username or password.'\r\n\t\t\t\t\t\t\t/> : \"\"}\r\n\t\t\t\t\t\t\t<Form size='large' onSubmit={this.handleSubmit}>\r\n\r\n\t\t\t\t\t\t\t\t<Form.Input fluid icon='user' iconPosition='left' onChange={this.handleChangeUsername} placeholder='Username'/>\r\n\t\t\t\t\t\t\t\t<Form.Input\r\n\t\t\t\t\t\t\t\t\tfluid\r\n\t\t\t\t\t\t\t\t\ticon='lock'\r\n\t\t\t\t\t\t\t\t\ticonPosition='left'\r\n\t\t\t\t\t\t\t\t\tplaceholder='Password'\r\n\t\t\t\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\t\t\t\tonChange={this.handleChangePassword}\r\n\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t<Button color='blue' fluid size='small'>Login </Button>\r\n\t\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t\t</Segment>\r\n\t\t\t\t\t</Grid.Column>\r\n\t\t\t\t</Grid>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default LoginForm\r\n","import React from 'react';\nimport 'semantic-ui-css/semantic.min.css';\nimport LoginForm from \"./LoginForm\";\n\n\nfunction App() {\n  return (\n\t<LoginForm />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}